{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      currentDate: \"\",\n      currentMonth: new Date().getMonth(),\n      currentYear: new Date().getFullYear(),\n      currentDays: \"\",\n      days: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n    };\n  },\n  methods: {\n    daysInMonth: function daysInMonth() {\n      return new Date(this.currentYear, this.currentMonth + 1, 0).getDate();\n    },\n    startDay: function startDay() {\n      return new Date(this.currentYear, this.currentMonth + 3, 1).getDay();\n    },\n    pre: function pre() {\n      if (this.currentMonth === 0) {\n        this.currentMonth = 11;\n        this.currentYear--;\n      } else {\n        this.currentMonth--;\n      }\n    },\n    next: function next() {\n      if (this.currentMonth === 11) {\n        this.currentMonth = 0;\n        this.currentYear++;\n      } else {\n        this.currentMonth++;\n      }\n    },\n    clickToday: function clickToday() {\n      return this.currentDate = new Date().getUTCDate();\n    }\n  },\n  computed: {\n    currentMonthName: function currentMonthName() {\n      return new Date(this.currentYear, this.currentMonth).toLocaleString(\"default\", {\n        month: 'long'\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","currentDate","currentMonth","Date","getMonth","currentYear","getFullYear","currentDays","days","methods","daysInMonth","getDate","startDay","getDay","pre","next","clickToday","getUTCDate","computed","currentMonthName","toLocaleString","month"],"sources":["/home/jl/VueTuts_ubuntu_OS/vue-indian/src/components/Calendar.vue"],"sourcesContent":["<template>\n    <div class=\"m-auto\">\n        <h1 class=\"text-2xl my-2 text-center\">Vue Calendar</h1>\n        <section class=\"mx-2 font-bold flex justify-between\">\n         <h2>{{currentMonthName}}</h2>\n         <button @click=\"clickToday\">Today</button>\n         \n         <h2>{{currentYear}}</h2>\n         \n        </section>\n        <section class=\"flex my-2\">\n            <p class=\"text-center\" style=\"width:14.28%\" v-for=\"day in days\" :key=\"day\">{{day}}</p>\n        </section>\n        <section class=\"flex flex-wrap\">\n            <p class=\"text-center\" style=\"width:14.28%\" v-for=\"num in startDay()\" :key=\"num\"></p>\n            <p class=\"text-center\" style=\"width:14.28%\" v-for=\"num in daysInMonth()\" \n            :key=\"num\" \n            :class=\"num === currentDate ? 'text-yellow-800' : ''\">{{num}}</p>\n        </section>\n        <section class=\"flex justify-between my-4\">\n            <button class=\"px-2 border rounded\" @click=\"pre\">Pre</button>\n            <button class=\"px-2 border rounded\" @click=\"next\">Next</button>\n        </section>\n    </div>\n</template>\n\n<script> \nexport default {\n    data(){\n        return{\n            currentDate:\"\",\n            currentMonth: new Date().getMonth(),\n            currentYear: new Date().getFullYear(),\n            currentDays:\"\",\n            days:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],\n        }\n    },\n    methods:{\n        daysInMonth(){\n            return new Date(this.currentYear, this.currentMonth+1,0).getDate()\n        },\n        startDay(){\n            return new Date(this.currentYear,this.currentMonth+3,1).getDay()\n        },\n        pre(){\n            if(this.currentMonth === 0){\n                this.currentMonth = 11;\n                this.currentYear--;\n            } else{\n\n                this.currentMonth--\n            }\n        },\n        next(){\n            if(this.currentMonth === 11){\n                this.currentMonth = 0;\n                this.currentYear++;\n            }else{\n\n                this.currentMonth++;\n            }\n        },\n        clickToday(){\n            return this.currentDate = new Date().getUTCDate()\n        }\n        \n    },\n    computed:{\n        currentMonthName(){\n            return new Date(this.currentYear,this.currentMonth).toLocaleString(\"default\",{month:'long'});\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";AA2BA,eAAe;EACXA,IAAI,WAAAA,KAAA,EAAE;IACF,OAAM;MACFC,WAAW,EAAC,EAAE;MACdC,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,QAAQ,EAAE;MACnCC,WAAW,EAAE,IAAIF,IAAI,EAAE,CAACG,WAAW,EAAE;MACrCC,WAAW,EAAC,EAAE;MACdC,IAAI,EAAC,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK;IACnD;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,WAAW,WAAAA,YAAA,EAAE;MACT,OAAO,IAAIP,IAAI,CAAC,IAAI,CAACE,WAAW,EAAE,IAAI,CAACH,YAAY,GAAC,CAAC,EAAC,CAAC,CAAC,CAACS,OAAO,EAAC;IACrE,CAAC;IACDC,QAAQ,WAAAA,SAAA,EAAE;MACN,OAAO,IAAIT,IAAI,CAAC,IAAI,CAACE,WAAW,EAAC,IAAI,CAACH,YAAY,GAAC,CAAC,EAAC,CAAC,CAAC,CAACW,MAAM,EAAC;IACnE,CAAC;IACDC,GAAG,WAAAA,IAAA,EAAE;MACD,IAAG,IAAI,CAACZ,YAAW,KAAM,CAAC,EAAC;QACvB,IAAI,CAACA,YAAW,GAAI,EAAE;QACtB,IAAI,CAACG,WAAW,EAAE;MACtB,OAAM;QAEF,IAAI,CAACH,YAAY,EAAC;MACtB;IACJ,CAAC;IACDa,IAAI,WAAAA,KAAA,EAAE;MACF,IAAG,IAAI,CAACb,YAAW,KAAM,EAAE,EAAC;QACxB,IAAI,CAACA,YAAW,GAAI,CAAC;QACrB,IAAI,CAACG,WAAW,EAAE;MACtB,CAAC,MAAI;QAED,IAAI,CAACH,YAAY,EAAE;MACvB;IACJ,CAAC;IACDc,UAAU,WAAAA,WAAA,EAAE;MACR,OAAO,IAAI,CAACf,WAAU,GAAI,IAAIE,IAAI,EAAE,CAACc,UAAU,EAAC;IACpD;EAEJ,CAAC;EACDC,QAAQ,EAAC;IACLC,gBAAgB,WAAAA,iBAAA,EAAE;MACd,OAAO,IAAIhB,IAAI,CAAC,IAAI,CAACE,WAAW,EAAC,IAAI,CAACH,YAAY,CAAC,CAACkB,cAAc,CAAC,SAAS,EAAC;QAACC,KAAK,EAAC;MAAM,CAAC,CAAC;IAChG;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}