{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e164e9f4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <h1 v-for=\\\"ranNum in ranList\\\" :key=\\\"ranNum.key\\\" >{{ranNum}}</h1> \"), _createElementVNode(\"h1\", null, _toDisplayString($data.ranList), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.clickHandle && $options.clickHandle(...args))\n  }, \"click me\"), $data.isShowing ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, \"This is showing page with v-if\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <h1 v-else>This is v-else</h1> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createElementVNode","_toDisplayString","$data","ranList","onClick","_cache","args","$options","clickHandle","isShowing","_createElementBlock","_hoisted_1"],"sources":["/Users/jialeteng/Documents/Dev/VueLearning/vue-lottery/src/GetRandomNum.vue"],"sourcesContent":["<template>\n  <!-- <h1 v-for=\"ranNum in ranList\" :key=\"ranNum.key\" >{{ranNum}}</h1> -->\n  <h1>{{ranList}}</h1>\n  <button @click=\"clickHandle\">click me</button>\n  <h1 v-if=\"isShowing\">This is showing page with v-if</h1>\n  <!-- <h1 v-else>This is v-else</h1> -->\n</template>\n\n<script>\nexport default {\n    name:'GetRandomNum',\n    data(){\n        return{\n            msg:\"开始抽奖\",\n            ranNum:\" \",\n            ranList:[\n                {'1':'下次再来'},\n            {'2':'恭喜你中100万'},\n            {'3':'迪斯尼门票一张'},\n            ],\n            isShowing:true,\n            randI:\" \"\n\n        }\n    },\n    methods:{\n        clickHandle(){\n                this.ranNum = Math.floor(Math.random()*this.ranList.length)\n                this.randI = this.ranList[this.ranNum]\n                console.log(this.randI)\n        }\n        \n    },\n\n}\n</script>\n\n<style scoped>\n    .wraper{\n        width:80%;\n        margin: 0 auto;\n    }\n</style>"],"mappings":";;;;;;6DACEA,mBAAA,0EAAyE,EACzEC,mBAAA,CAAoB,YAAAC,gBAAA,CAAdC,KAAA,CAAAC,OAAO,kBACbH,mBAAA,CAA8C;IAArCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,UAAQ,GAC3BJ,KAAA,CAAAO,SAAS,I,cAAnBC,mBAAA,CAAwD,MAAAC,UAAA,EAAnC,gCAA8B,K,mCACnDZ,mBAAA,oCAAuC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}